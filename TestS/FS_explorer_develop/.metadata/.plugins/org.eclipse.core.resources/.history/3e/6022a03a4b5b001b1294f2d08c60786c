/***************************************************************************/ /**
  @file     FileName.h
  @brief	///
  @author   Guido Lambertucci
 ******************************************************************************/
#ifndef FS_EXPLORER_H_
#define FS_EXPLORER_H_

/*******************************************************************************
 * INCLUDE HEADER FILES
 ******************************************************************************/

#include <stdbool.h>

/*******************************************************************************
 * CONSTANT AND MACRO DEFINITIONS USING #DEFINE
 ******************************************************************************/
#define NAMES_BUFFER_SIZE 255
#define NAME_LIST_SIZE 20
#define MAX_PATH_LENGHT 1000
typedef void (*cback)(void);
/*******************************************************************************
 * ENUMERATIONS AND STRUCTURES AND TYPEDEFS
 ******************************************************************************/


/*******************************************************************************
 * VARIABLE PROTOTYPES WITH GLOBAL SCOPE
 ******************************************************************************/

/*******************************************************************************
 * FUNCTION PROTOTYPES WITH GLOBAL SCOPE
 ******************************************************************************/

/**
 * @brief  exploreFS
 * @param
 * 		@path: path to the directory start, usually "/"
 * @return  returns a char * to the first directory/file name in the path given.
*/
char * exploreFS(char * path);


/**
 * @brief  getNext: gives the next name in the directory, if the directory is finished will return a NULL ptr.
 * @param  --
 * @return --
*/
char* getNext();


/**
 * @brief  getPrev: gives the previous name in the directory, if the directory is finished will return a NULL ptr.
 * @param  --
 * @return --
*/
char* getPrev();


/**
 * @brief  openSelected: opens the selected directory/file, if its a  directory will open it and return
 * a char ptr to the first filename of the dir, if its a file will call the callback provided by user with the method addCallbackForFile
 * @param  --
 * @return --
*/
char *  openSelected();


/**
 * @brief  goBackDir, if you are in a nested directory this function will go back a directory, if its on the first layer will return NULL
 * @param  --
 * @return --
*/
char *  goBackDir();


/**
 * @brief  getPath: returns the accumulated path char ptr
 * @param  --
 * @return --
*/
char * getPath(void);


/**
 * @brief  addCallbackForFile: provides a callback to be called when a file is selected to open
 * @param  --
 * @return --
*/
void addCallbackForFile(cback cb);
#endif /* FS_EXPLORER_H_ */
